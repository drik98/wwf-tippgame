package View;

import Database.DB;
import Domain.Tippspiel;
import Help.InitJFrame;
import java.awt.Color;
import java.awt.Dimension;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;

/**
 * Zur Ansicht und Bearbeitung der Stationen
 *
 * @author sht
 */
public class UebersichtTeilnehmer extends javax.swing.JPanel {

    List<Tippspiel> list;
    private DB db;
    private MainJFrame frame;

    /**
     * Creates new form StationAnsichtPanel
     *
     * @param frame
     */
    public UebersichtTeilnehmer(MainJFrame frame) {
        this.frame = frame;
        initComponents();
        changeStyle();
        try {
            this.db = new DB();
            this.list = this.db.getTippspielList();
            fuelleTabelle();
        } catch (SQLException ex) {
            Logger.getLogger(UebersichtTeilnehmer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        entfernenBtn = new javax.swing.JButton();
        hinzufgnBtn = new javax.swing.JButton();
        bearbeitenBtn = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        entfernenBtn.setText("Entfernen");
        entfernenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entfernenBtnActionPerformed(evt);
            }
        });

        hinzufgnBtn.setText("Hinzufügen");
        hinzufgnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hinzufgnBtnActionPerformed(evt);
            }
        });

        bearbeitenBtn.setText("Bearbeiten");
        bearbeitenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bearbeitenBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(entfernenBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hinzufgnBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bearbeitenBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entfernenBtn)
                    .addComponent(hinzufgnBtn)
                    .addComponent(bearbeitenBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Entfernt die ausgewaehlte Station
     *
     * @param evt
     */
    private void entfernenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entfernenBtnActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(null, "Soll das Tippgame wirklich gelöscht werden?");
        if (confirmation == JOptionPane.YES_OPTION) {
            int index = jTable1.getSelectedRow();
            if (index >= 0) {
                Tippspiel s = list.get(index);
                try {
                    db.removeTippspiel(s.getId());
                    list = this.db.getTippspielList();
                    fuelleTabelle();
                } catch (SQLException ex) {
                    Logger.getLogger(UebersichtTeilnehmer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_entfernenBtnActionPerformed

    /**
     * ruft die Form zum Hinzufuegen einer Station auf
     *
     * @param evt
     */
    private void hinzufgnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hinzufgnBtnActionPerformed
        InitJFrame.showNewTippgame(frame);
    }//GEN-LAST:event_hinzufgnBtnActionPerformed

    /**
     * Ruft die Form zum bearbeiten der ausgewaehlten Station aus
     *
     * @param evt
     */
    private void bearbeitenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bearbeitenBtnActionPerformed
        throw new UnsupportedOperationException("Not supported yet.");
    }//GEN-LAST:event_bearbeitenBtnActionPerformed

    /**
     * Fuellt die Tabelle mit den Informationen der Stationen
     *
     * @throws IOException
     */
    private void fuelleTabelle() {
        String[] spalten = {"id", "Name"};
        Object[][] input = new Object[list.size()][spalten.length];
        int i = 0;
        for (Tippspiel s : list) {
            input[i][0] = s.getId();
            input[i][1] = s.getName();
            i++;
        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                input,
                spalten
        ));
    }

    /**
     * Veraendert den Style der Tabellen
     */
    public final void changeStyle() {
        JTableHeader header = jTable1.getTableHeader();
        header.setBackground(Color.BLACK);
        header.setForeground(Color.WHITE);
        entfernenBtn.setBackground(Color.BLACK);
        entfernenBtn.setForeground(Color.WHITE);
        hinzufgnBtn.setBackground(Color.BLACK);
        hinzufgnBtn.setForeground(Color.WHITE);
        bearbeitenBtn.setBackground(Color.BLACK);
        bearbeitenBtn.setForeground(Color.WHITE);
        header.setPreferredSize(new Dimension(header.getWidth(), 40));
        jTable1.setRowHeight(40);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bearbeitenBtn;
    private javax.swing.JButton entfernenBtn;
    private javax.swing.JButton hinzufgnBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
