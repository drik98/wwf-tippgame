package View;

import Database.DB;
import Domain.Ausgang;

import Domain.Match;
import Domain.Tippspiel;
import Help.InitJFrame;
import Help.NumberFilter;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.text.AbstractDocument;

/**
 * Panel zum Aufzeichnen eines Arbeitsgangs
 *
 * @author nrg, sht
 */
public final class NewMatch extends javax.swing.JPanel {

    private DB db;
    private List<Tippspiel> tippspielList = new ArrayList<>();
    private Tippspiel t = null;
    private Match match = null;
    private Ausgang a = null;
    private String sieger = "";
    private MainJFrame frame;
    private DefaultComboBoxModel model;

    /**
     * Creates new form ArbeitsgangPanel
     *
     * @param frame
     * @param t
     */
    public NewMatch(MainJFrame frame, Tippspiel t) {
        try {
            this.db = new DB();
            this.frame = frame;
            this.t = t;
            this.tippspielList = db.getTippspielList();
            initComponents();
            initLists();
            initSiegerListbox();
            initAusgangCombobox();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * Creates new form ArbeitsgangPanel
     *
     * @param frame
     * @param t
     * @param m
     */
    public NewMatch(MainJFrame frame, Tippspiel t, Match m) {
        try {
            this.db = new DB();
            this.frame = frame;
            this.t = t;
            this.match = m;
            this.tippspielList = db.getTippspielList();
            this.a = m.getAusgang();
            initComponents();
            initLists();
            tipp.setText(m.getTipp());
            punkte.setText(String.valueOf(m.getPunkte()));
            matchnummer.setText(String.valueOf(m.getMatchnummer()));
            this.sieger = m.getSieger();
            initSiegerListbox();
            initAusgangCombobox();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tippgamePanel = new javax.swing.JLabel();
        tippgamePanel1 = new javax.swing.JLabel();
        tippspielBox = new javax.swing.JComboBox();
        hinzufuegenBtn1 = new javax.swing.JButton();
        tippgamePanel2 = new javax.swing.JLabel();
        matchnummer = new javax.swing.JTextField();
        tippgamePanel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        siegerList = new javax.swing.JList<>();
        tippgamePanel4 = new javax.swing.JLabel();
        ausgangsBox = new javax.swing.JComboBox();
        bearbeitenSiegerBtn = new javax.swing.JButton();
        deleteSiegerBtn = new javax.swing.JButton();
        addSieger = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tipp = new javax.swing.JTextArea();
        tippgamePanel5 = new javax.swing.JLabel();
        punkte = new javax.swing.JTextField();

        tippgamePanel.setText("Tippspiel");

        tippgamePanel1.setText("Tipp");

        hinzufuegenBtn1.setText("Speichern");
        hinzufuegenBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hinzufuegenBtn1ActionPerformed(evt);
            }
        });

        tippgamePanel2.setText("Matchnummer");

        tippgamePanel3.setText("Sieger");

        siegerList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(siegerList);

        tippgamePanel4.setText("Ausgang");

        bearbeitenSiegerBtn.setText("Bearbeiten");

        deleteSiegerBtn.setText("Entfernen");

        addSieger.setText("Hinzuf√ºgen");
        addSieger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSiegerActionPerformed(evt);
            }
        });

        tipp.setColumns(20);
        tipp.setRows(5);
        jScrollPane2.setViewportView(tipp);

        tippgamePanel5.setText("Punkte");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tippgamePanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addSieger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bearbeitenSiegerBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteSiegerBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tippgamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tippgamePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tippgamePanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tippgamePanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tippgamePanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ausgangsBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tippspielBox, 0, 445, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(punkte, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(matchnummer, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(hinzufuegenBtn1)
                    .addContainerGap(747, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tippgamePanel)
                    .addComponent(tippspielBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matchnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tippgamePanel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tippgamePanel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(punkte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tippgamePanel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tippgamePanel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addSieger)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bearbeitenSiegerBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteSiegerBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tippgamePanel4)
                    .addComponent(ausgangsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(308, Short.MAX_VALUE)
                    .addComponent(hinzufuegenBtn1)
                    .addGap(21, 21, 21)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addSiegerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSiegerActionPerformed
        AddTippspiel tippspielPanel = new AddTippspiel();
        int result = JOptionPane.showConfirmDialog(frame, tippspielPanel,
                "Sieger anlegen", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {

            model.addElement(tippspielPanel.getBezeichnung().getText());

        }
    }//GEN-LAST:event_addSiegerActionPerformed

    private void hinzufuegenBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hinzufuegenBtn1ActionPerformed
        if (this.match == null) {
            this.match = new Match();
        }
        try {
            this.match.setTipp(getTipp())
                    .setTippspiel_id(getTippspielId())
                    .setPunkte(getPunkte())
                    .setAusgang(getAusgang())
                    .setSieger(getSieger())
                    .setMatchnummer(getMatchnummer());
            match = db.updateMatch(match);
            InitJFrame.showNewTippgame(frame, t, match);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_hinzufuegenBtn1ActionPerformed

    private void initLists() {
        initTippspielList();
        ((AbstractDocument) punkte.getDocument()).setDocumentFilter(new NumberFilter());
        ((AbstractDocument) matchnummer.getDocument()).setDocumentFilter(new NumberFilter());
        matchnummer.setText(String.valueOf(db.getNextMatchnummer(this.t.getId())));
    }

    private void initTippspielList() {
        tippspielBox.removeAllItems();
        tippspielList.forEach((t) -> {
            tippspielBox.addItem(t);
        });
        if (this.t != null) {
            tippspielBox.setSelectedItem(this.t);
        }
    }

    public String getTipp() {
        return tipp.getText();
    }

    public int getPunkte() {
        try {
            return Integer.parseInt(punkte.getText());
        } catch (NumberFormatException e) {
            return 1;
        }
    }
    
    public int getMatchnummer() {
        try {
            return Integer.parseInt(matchnummer.getText());
        } catch (NumberFormatException e) {
            return 1;
        }
    }

    public long getTippspielId() {
        return ((Tippspiel) tippspielBox.getSelectedItem()).getId();
    }

    public String getSieger() {
        ListModel model = siegerList.getModel();
        String sieger = "";
        for (int i = 0; i < model.getSize(); i++) {
            sieger += ";" + model.getElementAt(i);
        }
        return sieger.replaceFirst(Pattern.quote(";"), "");
    }

    public Ausgang getAusgang() {
        return (Ausgang) ausgangsBox.getSelectedItem();
    }

    private void initSiegerListbox() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        if (!sieger.isEmpty()) {
            String[] sieger = this.sieger.split(";");
            for (String s : sieger) {
                model.addElement(s);
            }
        }
        this.model = model;
        siegerList.setModel(model);

    }

    private void initAusgangCombobox() throws SQLException {

        ArrayList<Ausgang> ausgangslist = new DB().getAusgangsList();
        ausgangslist.forEach((a) -> {
            ausgangsBox.addItem(a);
        });
        if (this.a != null) {
            ausgangsBox.setSelectedItem(a);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSieger;
    private javax.swing.JComboBox ausgangsBox;
    private javax.swing.JButton bearbeitenSiegerBtn;
    private javax.swing.JButton deleteSiegerBtn;
    private javax.swing.JButton hinzufuegenBtn1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField matchnummer;
    private javax.swing.JTextField punkte;
    private javax.swing.JList<String> siegerList;
    private javax.swing.JTextArea tipp;
    private javax.swing.JLabel tippgamePanel;
    private javax.swing.JLabel tippgamePanel1;
    private javax.swing.JLabel tippgamePanel2;
    private javax.swing.JLabel tippgamePanel3;
    private javax.swing.JLabel tippgamePanel4;
    private javax.swing.JLabel tippgamePanel5;
    private javax.swing.JComboBox tippspielBox;
    // End of variables declaration//GEN-END:variables

}
